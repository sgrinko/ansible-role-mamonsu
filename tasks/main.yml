---
- block:  # mamonsu_install|bool

  - block:  # not mamonsu_install_src|bool
    # Installation from the Packets of the Repository of the desired OS

    # Debian/Ubuntu
    - name: Install mamonsu | Load apt-repo-add.sh file DEBIAN
      get_url:
        url: "https://repo.postgrespro.ru/mamonsu/keys/apt-repo-add.sh"  # noqa 204
        dest: /tmp/
        timeout: 30
        validate_certs: false
        mode: 0700
      when: ansible_os_family == "Debian"

    - name: Install mamonsu | Start apt-repo-add.sh file DEBIAN
      become: true
      command: "/tmp/apt-repo-add.sh"
      when: ansible_os_family == "Debian"

    # RHEL
    - name: Install mamonsu | Get mamonsu keys for repo.postgrespro.ru RHEL 7
      yum:
        name: https://repo.postgrespro.ru/mamonsu/keys/centos.rpm
        state: present
      when: ansible_os_family == "RedHat" and
            ansible_distribution_major_version == '7'

    - name: Install mamonsu | delete conf directory if exists
      file:
        path: "/etc/mamonsu"
        state: absent

    # DEBIAN
    - name: Install mamonsu | install package DEBIAN # noqa 403
      apt:
        name: "mamonsu={{ mamonsu_version }}"
        state: installed 
        update_cache: yes
      when: ansible_os_family == "Debian"

    # RHEL 7
    - name: Install mamonsu | install package RHEL 7# noqa 403
      yum:
        name: "mamonsu-{{ mamonsu_version }}"
        state: installed
      when: ansible_os_family == "RedHat" and
            ansible_distribution_major_version == '7'

    # RHEL 8
    - name: Install mamonsu | Get mamonsu keys for repo.postgrespro.ru RHEL 8
      dnf:
        name: https://repo.postgrespro.ru/mamonsu/keys/centos.rpm
        state: latest
      when: ansible_os_family == "RedHat" and
            ansible_distribution_major_version >= '8'

    - name: Install mamonsu | install package RHEL 8 # noqa 403
      dnf:
        name: "mamonsu-{{ mamonsu_version }}"
        disablerepo: AppStream
        state: installed
      when: ansible_os_family == "RedHat" and
            ansible_distribution_major_version >= '8'

    - name: Install mamonsu | install RHEL - correct pg_probackup.py plugin
      template:
        src: pg_probackup.py.j2
        dest: /usr/lib/python3.6/site-packages/mamonsu/plugins/system/linux/pg_probackup.py
        owner: root
        group: root
        mode: 0644
      notify: "restart mamonsu"
      when: ansible_os_family == "RedHat"

    - name: Install mamonsu | install package RHEL - correct pg_probackup.py plugin
      template:
        src: pg_probackup.py.j2
        dest: /usr/lib/python3/dist-packages/mamonsu/plugins/system/linux/pg_probackup.py
        owner: root
        group: root
        mode: 0644
      notify: "restart mamonsu"
      when: ansible_os_family == "Debian"

    when: not mamonsu_install_src|bool

  - block:  # mamonsu_install_src|bool
    # Installation from source code

    ## Install mamonsu on server
    - name: Install mamonsu | delete conf directory if exists
      file:
        path: "/etc/mamonsu"
        state: absent

    - name: Install mamonsu | Create temporary directories for build mamonsu
      file:
        path: "~postgres/build/mamonsu"
        owner: postgres
        group: postgres
        state: directory
        mode: '0755'

    - name: Install mamonsu | Download "mamonsu" version {{ mamonsu_version }}
      get_url:
        url: "{{ mamonsu_download_link }}"
        dest: "~postgres/build/mamonsu"
        timeout: 60
        validate_certs: false
      environment: "{{ proxy_env | default({}) }}"

    - name: Install mamonsu | Unarchive mamonsu
      command: "tar xzf ~postgres/build/mamonsu/mamonsu-{{ mamonsu_version }}.tar.gz --directory ~postgres/build/mamonsu/"

    - name: Install mamonsu | correct pg_probackup.py plugin
      template:
        src: pg_probackup.py.j2
        dest: "~postgres/build/mamonsu/mamonsu-{{ mamonsu_version }}/mamonsu/plugins/system/linux/pg_probackup.py"
        owner: root
        group: root
        mode: 0644

    - name: Install mamonsu | Delete file /usr/bin/mamonsu
      file:
        path: /usr/bin/mamonsu
        state: absent

    - name: Install mamonsu | install mamonsu from source
      become: true
      shell: "cd ~postgres/build/mamonsu/mamonsu-{{ mamonsu_version }} && python3 setup.py build && python3 setup.py install"

    - name: Install mamonsu | Delete temporary directories for build extensions
      file:
        path: "~postgres/build"
        state: absent

    - name: Install mamonsu | Check that the /usr/bin/mamonsu exists 
      stat:
        path: /usr/bin/mamonsu
      register: mamonsu_file_check

    - name: Install mamonsu | Create symbolic link to /usr/local/bin
      file:
        src: "/usr/local/bin/mamonsu"
        dest: "/usr/bin/mamonsu"
        state: link
      when: not mamonsu_file_check.stat.exists

    - name: Install mamonsu | Create init.d/mamonsu file
      copy:
        src: mamonsu
        dest: /etc/init.d/mamonsu
        owner: root
        group: root
        mode: 0755

    when: mamonsu_install_src|bool

  # general installation steps ...
  - name: Install mamonsu | Enable log rotation with logrotate
    copy:
      content: |
        {{ mamonsu_log_path }}{{ mamonsu_log_file }} {
            daily
            rotate 7
            compress
            missingok
            notifempty
            create 0640 {{ mamonsu_service_user }} {{ mamonsu_service_user }}
            sharedscripts
            postrotate
                if [ -d "/run/systemd/system" -a -x "/bin/systemctl" ]; then
                    /bin/systemctl condrestart mamonsu >/dev/null
                else
                    /etc/init.d/mamonsu condrestart >/dev/null
                fi
            endscript
        }
      mode: 0644
      dest: /etc/logrotate.d/mamonsu

  - name: Install mamonsu | Create conf directory
    file:
      path: "/etc/mamonsu"
      state: directory
      mode: 0755

  - name: Install mamonsu | Create default agent.conf file
    copy:
      src: agent.conf
      dest: /etc/mamonsu/agent.conf
      owner: root
      group: root
      mode: 0644

  - name: Install mamonsu | Prepare agent.conf file (replace "user","database","query_timeout", "address",...) # noqa 305
    ini_file:
      path: /etc/mamonsu/agent.conf
      section: "{{ item.section }}"
      option: "{{ item.option }}"
      value: "{{ item.value }}"
      mode: 0644
    loop:
      - {section: 'postgres',             option: 'user',                       value: 'mamonsu'}
      - {section: 'postgres',             option: 'database',                   value: 'mamonsu'}
      - {section: 'postgres',             option: 'query_timeout',              value: '60'}
      - {section: 'zabbix',               option: 'address',                    value: '{{ mamonsu_zabbix_server_ip }}'}
      - {section: 'zabbix',               option: 'port',                       value: '{{ mamonsu_zabbix_server_port | d(10051, true) }}'}
      - {section: 'zabbix',               option: 'client',                     value: '{{ inventory_hostname }}'}
      - {section: 'log',                  option: 'file',                       value: '{{ mamonsu_log_path }}{{ mamonsu_log_file }}'}
      - {section: 'plugins',              option: 'enabled',                    value: 'True'}
      - {section: 'pgbuffercache',        option: 'interval',                   value: '{{ mamonsu_interval_pgbuffercache | d(1200, true) }}'}
      - {section: 'pgprobackup',          option: 'enabled',                    value: '{{ mamonsu_pgprobackup_enable }}'}
      - {section: 'pgprobackup',          option: 'backup_dirs',                value: '{{ mamonsu_pgprobackup_dirs }}'}
      - {section: 'pgprobackup',          option: 'pg_probackup_path',          value: '{{ mamonsu_pgprobackup_path }}'}
      - {section: 'memoryleakdiagnostic', option: 'enabled',                    value: '{{ mamonsu_memoryleakdiagnostic_enable }}'}
      - {section: 'memoryleakdiagnostic', option: 'private_anon_mem_threshold', value: '{{ mamonsu_memoryleakdiagnostic_anonmem }}'}
      - {section: 'relationssize',        option: 'enabled',                    value: '{{ mamonsu_relationssize_enable }}'}
      - {section: 'relationssize',        option: 'relations',                  value: '{{ mamonsu_relationssize_list }}'}
    loop_control:
      label: "{{ item.option }}"

  - name: Install mamonsu | Copy systemd service file
    template:
      src: mamonsu.service.j2
      dest: /lib/systemd/system/mamonsu.service
      owner: root
      group: root
      mode: 0644
    notify: "restart mamonsu"

  - name: Install mamonsu | delete log directory "{{ mamonsu_log_path }}" if exists
    file:
      path: "{{ mamonsu_log_path }}"
      state: absent

  - name: Install mamonsu | make sure log directory "{{ mamonsu_log_path }}" exists
    file:
      path: "{{ mamonsu_log_path }}"
      owner: "{{ mamonsu_service_user }}"
      group: "{{ mamonsu_service_user }}"
      state: directory
      mode: 0700

  - name: Install mamonsu | Create plugins directory
    file:
      path: "/etc/mamonsu/plugins"
      state: directory
      mode: 0755

  - name: Install mamonsu | Copy mamonsu plugin pg_partition.py
    template:
      src: pg_partition.py.j2
      dest: /etc/mamonsu/plugins/pg_partition.py
      mode: 0644
    when: mamonsu_plugin_pg_partition|d(true,true)|bool

  - name: Create "~postgres/mamonsu_setup.sql"  # yamllint disable rule:line-length
    copy:
      content: |
        select not pg_is_in_recovery() as is_master \gset
        \if :is_master
          select pg_terminate_backend(pid) from pg_catalog.pg_stat_activity where datname = 'mamonsu';
          DROP DATABASE IF EXISTS mamonsu;
          CREATE DATABASE mamonsu;
        \endif
      dest: ~postgres/mamonsu_setup.sql
      owner: postgres
      group: postgres
      mode: 0600

  - name: Install mamonsu | Setup bootstrap mamonsu - RECREATE DATABASE IF EXISTS mamonsu
    become: true
    become_user: postgres
    command: "{{ postgresql_bin_dir }}/psql -p {{ postgresql_port|d(5432,true) }} -f ~postgres/mamonsu_setup.sql postgres"

  - name: Install mamonsu | Create "~postgres/mamonsu_db_genallrun.sql"  # yamllint disable rule:line-length
    copy:
      content: |
        select '\c ' || datname || '
        \i ~postgres/mamonsu_right_add.sql
        '
        from pg_database where not datistemplate and not pg_is_in_recovery();
      dest: ~postgres/mamonsu_db_genallrun.sql
      owner: postgres
      group: postgres
      mode: 0600

  - name: Install mamonsu | Create "~postgres/mamonsu_user_add.sql"  # yamllint disable rule:line-length
    copy:
      content: |
        do $$ begin
          if not pg_is_in_recovery() and not exists(select * from pg_roles where rolname = 'mamonsu') then
            CREATE ROLE mamonsu LOGIN NOSUPERUSER INHERIT NOCREATEDB NOCREATEROLE NOREPLICATION;
          end if;
        end
        $$;
      dest: ~postgres/mamonsu_user_add.sql
      owner: postgres
      group: postgres
      mode: 0600

  - name: Install mamonsu | Copy mamonsu setup DB files to server
    template:
      src: mamonsu_right_add.sql.j2
      dest: ~postgres/mamonsu_right_add.sql
      owner: postgres
      group: postgres
      mode: 0644

  - name: Install mamonsu | Setup bootstrap mamonsu - add rights to DB
    become: true
    become_user: postgres
    command: "{{ postgresql_bin_dir }}/psql -p {{ postgresql_port|d(5432,true) }} -f ~postgres/mamonsu_user_add.sql postgres"

  - name: Install mamonsu | Create extension pg_buffercache on database mamonsu
    become: true
    become_user: postgres
    shell: |
      if {{ postgresql_bin_dir }}/psql -p {{ postgresql_port|d(5432,true) }} -tAX -c 'select case when pg_is_in_recovery() then 0 else 1 end as master' postgres | grep '1' ; then # noqa 204
        {{ postgresql_bin_dir }}/psql -p {{ postgresql_port|d(5432,true) }} -U postgres -d mamonsu -c 'CREATE EXTENSION IF NOT EXISTS pg_buffercache SCHEMA public;' # noqa 204
      fi

  - name: Install mamonsu | Setup bootstrap mamonsu - create environment # noqa 305
    become: true
    become_user: postgres
    shell: |
      if {{ postgresql_bin_dir }}/psql -p {{ postgresql_port|d(5432,true) }} -tAX -c 'select case when pg_is_in_recovery() then 0 else 1 end as master' postgres | grep '1' ; then # noqa 204
        mamonsu bootstrap -x -M mamonsu -U postgres -d mamonsu --port={{ postgresql_port|d(5432,true) }} ;
      fi

  - name: Install mamonsu | Setup bootstrap mamonsu - add users to DB (generate script)
    become: true
    become_user: postgres
    command: "{{ postgresql_bin_dir }}/psql -p {{ postgresql_port|d(5432,true) }} -f ~postgres/mamonsu_db_genallrun.sql -t -A -o ~postgres/mamonsu_db_genallrun_out.sql postgres" # noqa 204

  - name: Install mamonsu | Setup bootstrap mamonsu - add users to DB (run script)
    become: true
    become_user: postgres
    command: "{{ postgresql_bin_dir }}/psql -p {{ postgresql_port|d(5432,true) }} -f ~postgres/mamonsu_db_genallrun_out.sql postgres"
    notify: "restart mamonsu"

  environment: "{{ proxy_env | default({}) }}"
  when: mamonsu_install|bool
  tags: mamonsu

...
